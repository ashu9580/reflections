When would you want to use a remote repository rather than keeping all your work local?

When I am working on another computer or collaborating with other developers.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

I may be working on a branch which is already updated by another developer on Git Hub or I may not need a particular branch for my program.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Fork means to copy a repository on Git Hub to our Git Hub account. It creates an identical repository with the same commits.
Clone means to copy a repository from Git Hub to our local drive. It also automatically creates a remote to that repository named origin.
Branches are what we copy when we clone or fork a repository.

What is the benefit of having a copy of the last known state of the remote stored locally?

We can check what changes was made to the remote on Git Hub after we started working on it offline and how can we resolve the conflicts.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I would use Google Drive to collaborate. It would be easier to access files and there would be no need to invest time in learning Git as Google Drive is easier to use. But version-control will be tougher and I think resolving conflicts will not be easy.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

Master is the main branch which every developer working with me will be using. Directly updating master without telling the others about the changes which I made can lead to bugs and other problems. It would be easier to directly make changes in the master branch but it would be more beneficial and informative if we make changes in a seperate branch.